      SUBROUTINE MVDBTOOLKIT.SENDGRID(MVDBTOOLKIT.WOBJ)
      **********************************************************************
      *
      * Copyright (C) 2018 Zumasys, Inc., All Rights Reserved
      *
      * Written by: Patrick Payne, Zumasys
      * Date: 4/2/2019
      * Description: SENDGRID wrapper

      **********************************************************************
      *
      * Purpose of this program is to front end the sendgrid library of functions
      *
      * It will utilize the object model concept and try to wrap all sendgrid
      * functions into this one library
      *
      *
      * MVDBTOOLKIT.WOBJ
      * { "api":"mailsend_v2",
      *    "params": {
      *       "to": [
      *         {
      *           "to":"email address",
      *           "name":"Nice name"
      *         }
      *       ],
      *       "cc": [
      *         {
      *           "to":"email address",
      *           "name":"Nice name"
      *         }
      *       ],
      *       "bcc": [
      *         {
      *           "to":"email address",
      *           "name":"Nice name"
      *         }
      *       ],
      *       "replyto":"address",
      *       "from":"From email address",
      *       "fromname":"From name",
      *       "subject":"Subject",
      *       "text":"Plain text of your email",
      *       "html":"Html version of your email",
      *       "files": [
      *           {
      *              "sourcefile":"path to file",
      *              "filename":"file name to present file as",
      *              "type":"type of file, application/pdf for example"
      *           }
      *       ]
      *    },
      *   "result": {
      *      "status":"error or ok",
      *      "statusmsg:"status msg"
      *    }
      *
      *  }
      *
      * Starting with mailsend_v2 - We are using this version because it allows
      * attachments without having to base64 and include them into the json payload
      * v2 uses curl and a normal form-data post to get attachments.
      *
      * curl https://api.sendgrid.com/api/mail.send.json \
      *-F to=recipient@domain.com -F toname=test -F subject="Example Subject" \
      *-F text="testing text body" --form-string html="<strong>testing html body</strong>" \
      *-F from=test@yourdomain.com -F api_user=your_sendgrid_username -F api_key=your_sendgrid_password \
      *-F files\[attachment.gz\]=@f.php.gz
      *
      WOBJ="MVDBTOOLKIT.WOBJ"

      CALL @WOBJ(MVDBTOOLKIT.WOBJ,"GET","api",API,"",RERR)

      CALL @WOBJ(MVDBTOOLKIT.WOBJ,"SET.OBJECT","result","{}","",RERR)

      API=OCONV(API,'MCU')

      APISTATUS="ok"
      APISTATUSMSG=""

      BEGIN CASE
         CASE API="MAILSEND_V2"
            GOSUB mailsend_v2
         CASE 1
            APISTATUS="error"
            APISTATUSMSG="Invalid api request (":API:")"
      END CASE

      CALL @WOBJ(MVDBTOOLKIT.WOBJ,"SET","result.status",APISTATUS,"",RERR)
      CALL @WOBJ(MVDBTOOLKIT.WOBJ,"SET","result.statusmsg",APISTATUSMSG,"",RERR)

      RETURN

mailsend_v2: * Send an email

      CALL @WOBJ(MVDBTOOLKIT.WOBJ,"LENGTH","params.to",NUMBER.TOO,"",RERR)
      IF NOT(NUMBER.TOO) THEN
         APISTATUS="error"
         APISTATUS="Must supply array of to"
         RETURN
      RETURN
      
      TOO="to"; TOO.NAMES="tonames"
      IF NUMBER.TOO > 1 THEN TOO:='[]'; TOO.NAMES:='[]'

      FOR X=1 TO NUMBER.TOO
          P="params.to[":X-1:"]"
          CALL @WOBJ(MVDBTOOLKIT.WOBJ,"GET",P:".to",THIS.TO,"",RERR)
          CALL @WOBJ(MVDBTOOLKIT.WOBJ,"GET",P:".name",THIS.NAME,"",RERR)
          TOO<-1>=THIS.TO
          TOO.NAMES<-1>=THIS.NAME
      NEXT X
      CONVERT @AM TO '&' IN TOO
      CONVERT @AM TO '&' IN TOO.NAMES
      DEBUG
      
  



